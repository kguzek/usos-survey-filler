{"version":3,"sources":["../src/cli.ts","../src/survey-filler.ts"],"sourcesContent":["/* SPDX-License-Identifier: AGPL-3.0-only */\n/*            USOS Survey Filler          */\n/*       Copyright © 2025 Konrad Guzek    */\n\nimport { writeFile } from \"fs/promises\";\nimport { input, password } from \"@inquirer/prompts\";\nimport { Browser, BrowserPlatform, install, resolveBuildId } from \"@puppeteer/browsers\";\nimport boxen from \"boxen\";\nimport chalk from \"chalk\";\nimport { program } from \"commander\";\nimport { config } from \"dotenv\";\nimport ora from \"ora\";\n\nimport { SurveyFiller } from \"./survey-filler\";\n\nconst VERSION = process.env.npm_package_version || \"1.3.5\";\nconst REPO_URL = \"https://github.com/kguzek/usos-survey-filler\";\nconst KNOWN_ERROR_MESSAGES = [\n  \"Most likely the page has been closed\",\n  \"Navigating frame was detached\",\n  \"Target closed\",\n];\n\nconst cardIntro = boxen(\n  chalk.white(`\nWitaj w USOS Survey Filler ${VERSION}!\n\nTwórca: Konrad Guzek\nGitHub: ${chalk.underline(\"https://github.com/kguzek\")}\nEmail: konrad@guzek.uk\n`),\n  {\n    padding: 1,\n    margin: 1,\n    borderStyle: \"round\",\n    borderColor: \"cyan\",\n    textAlignment: \"center\",\n  },\n);\n\nconst cardOutro = boxen(\n  chalk.white(`\nDziękuję za korzystanie z USOS Survey Filler.\n\n⭐ Zostaw mi gwiazdkę na GitHubie! ⭐\n  \n${chalk.underline(REPO_URL)}\n`),\n  {\n    padding: 1,\n    margin: 1,\n    borderStyle: \"round\",\n    borderColor: \"yellow\",\n    textAlignment: \"center\",\n  },\n);\n\nconst generateErrorCard = (text: string) =>\n  boxen(chalk.white(text), {\n    padding: 1,\n    margin: 1,\n    borderStyle: \"round\",\n    borderColor: \"red\",\n    textAlignment: \"center\",\n  });\n\nconst cardError = generateErrorCard(`\nWystąpił nieoczekiwany błąd podczas wykonywania aplikacji.\nJeśli problem będzie się powtarzał, zgłoś go na GitHubie:\n\n${chalk.underline(REPO_URL + \"/issues/new\")}\n`);\n\nconst cardErrorNoHeadless = generateErrorCard(`\nWystąpił błąd podczas wykonywania aplikacji.\nSpróbuj uruchomić program z flagą -l/--headless:\n\nnpx usos-survey-filler -l\n`);\n\nprogram\n  .version(VERSION)\n  .description(\"USOS Survey Filler\")\n  .option(\n    \"-l, --headless\",\n    \"Uruchom bez interfejsu graficznego (wymaga podania loginu i hasła w CLI)\",\n  );\n\nconst formatMessage = (emoji: string, message: string) =>\n  `\\n${emoji} ${chalk.dim(\"[\")}${chalk.bgCyan.black(\"USOS Survey Filler\")}${chalk.reset.dim(\"]\")} ${message}`;\nconst formatInfo = (message: string) => formatMessage(\"🤖\", chalk.cyan(message));\nconst printInfo = (message: string) => console.info(formatInfo(message));\nconst formatError = (message: string) => \"\\n\" + formatMessage(\"❌\", chalk.red(message));\nconst printError = (message: string) => console.error(formatError(message));\nconst printWarning = (message: string) =>\n  console.warn(formatMessage(\"⚠️\", chalk.yellow(message)));\n\nfunction getPuppeteerPlatform(nodePlatform: string): BrowserPlatform {\n  switch (nodePlatform) {\n    case \"win32\":\n      return BrowserPlatform.WIN64;\n    case \"darwin\":\n      return BrowserPlatform.MAC;\n    case \"linux\":\n      return BrowserPlatform.LINUX;\n    default:\n      throw new Error(`Unsupported platform: ${nodePlatform}`);\n  }\n}\n\nprogram.action(async () => {\n  config();\n\n  console.log(cardIntro);\n  const options = program.opts();\n\n  const optional = options.headless ? \"\" : \" (opcjonalne)\";\n  const username =\n    process.env.USOS_USERNAME ||\n    (await input({\n      message: `👤 Nazwa użytkownika do USOSa${optional}:`,\n    }));\n\n  const userPassword =\n    process.env.USOS_PASSWORD ||\n    (await password({\n      message: `🔑 Hasło do USOSa${optional}:`,\n      mask: \"*\",\n    }));\n\n  if (userPassword !== \"\" || username !== \"\") {\n    // Create a .env file with the provided values\n    const envContent = `USOS_USERNAME=${username}\\nUSOS_PASSWORD=${userPassword}`;\n    await writeFile(\".env\", envContent);\n  }\n\n  const installation = ora({\n    prefixText: formatInfo(\"Trwa instalacja programu...\"),\n  }).start();\n\n  try {\n    const cacheDir = \"./.puppeteer-cache\";\n    const platform = getPuppeteerPlatform(process.platform);\n    const browser = Browser.CHROME;\n    const buildId = await resolveBuildId(browser, platform, \"latest\");\n\n    await install({\n      cacheDir,\n      platform,\n      buildId,\n      browser,\n    });\n  } catch (error) {\n    if (error instanceof Error) {\n      printWarning(error.message);\n    }\n    installation.fail();\n    printError(\"Nie udało się zainstalować przeglądarki dla Puppeteer.\"),\n      console.log(cardError);\n    process.exitCode = 1;\n    return;\n  }\n\n  installation.succeed();\n  const execution = ora({\n    prefixText: formatInfo(\"Instalacja ukończona. Uruchamianie programu...\"),\n  }).start();\n  try {\n    const surveyFiller = new SurveyFiller(username, userPassword, options.headless);\n    await surveyFiller.start();\n    execution.succeed();\n    printInfo(`Wypełnionych ankiet: ${surveyFiller.getSurveysFilled()}`);\n    console.log(cardOutro);\n  } catch (error) {\n    if (error instanceof Error) {\n      if (KNOWN_ERROR_MESSAGES.find((msg) => error.message.includes(msg))) {\n        execution.succeed();\n        printInfo(\"Program zamknięty przez użytkownika.\");\n        console.log(cardOutro);\n        return;\n      }\n      if (error.message === \"Tryb headless wymaga podania loginu i hasła.\") {\n        execution.fail();\n        printError(error.message);\n        return;\n      }\n    }\n    execution.fail();\n    printWarning(error instanceof Error ? error.message : `Nieznany błąd: ${error}`);\n    console.log(options.headless ? cardError : cardErrorNoHeadless);\n    process.exitCode = 1;\n  }\n});\n\nprogram.parse(process.argv);\n","/* SPDX-License-Identifier: AGPL-3.0-only */\n/*            USOS Survey Filler          */\n/*       Copyright © 2025 Konrad Guzek    */\n\nimport type { Browser, Page } from \"puppeteer\";\nimport puppeteer from \"puppeteer\";\n\nconst USOS_HOME_URL = \"https://web.usos.pwr.edu.pl/kontroler.php?_action=home/index\";\nconst USOS_LOGIN_URL =\n  \"https://login.pwr.edu.pl/auth/realms/pwr.edu.pl/protocol/cas/login?service=https%3A%2F%2Fweb.usos.pwr.edu.pl%2Fkontroler.php%3F_action%3Dlogowaniecas%2Findex\";\nconst USOS_SURVEYS_HOMEPAGE =\n  \"https://web.usos.pwr.edu.pl/kontroler.php?_action=dla_stud/studia/ankiety/index\";\n\ninterface SurveyInfo {\n  name: string | null;\n  link: string | null;\n}\n\nexport class SurveyFiller {\n  private page!: Page;\n  private browser!: Browser;\n  private surveys: SurveyInfo[] = [];\n  private usosUsername: string;\n  private usosPassword: string;\n  private headless: boolean;\n  private surveysFilled = 0;\n\n  constructor(username?: string, password?: string, headless = false) {\n    this.usosUsername = username || \"\";\n    this.usosPassword = password || \"\";\n    this.headless = headless;\n    if (headless && (this.usosUsername === \"\" || this.usosPassword === \"\")) {\n      throw new Error(\"Tryb headless wymaga podania loginu i hasła.\");\n    }\n  }\n\n  getSurveysFilled() {\n    return this.surveysFilled;\n  }\n\n  private async init() {\n    this.browser = await puppeteer.launch({\n      headless: this.headless ? undefined : false,\n      args: [\"--window-size=1600,900\", \"--window-position=100,100\"],\n    });\n\n    const pages = await this.browser.pages();\n    await pages[0].close();\n    this.page = await this.browser.newPage();\n    this.page.setViewport({ width: 1600, height: 900 });\n  }\n\n  private async wait() {\n    await this.page.waitForNavigation({ waitUntil: \"networkidle0\" });\n  }\n\n  private async navigate(url: string) {\n    // console.debug(\" -->\", url);\n    await this.page.goto(url, { waitUntil: \"networkidle0\" });\n  }\n\n  private showAlert(message: string) {\n    if (this.headless) {\n      return;\n    }\n    return this.page.evaluate(\n      (message) => alert(`[USOS Survey Filler] ${message}`),\n      message,\n    );\n  }\n\n  private async manualLogin(alertMessage: string) {\n    await this.showAlert(alertMessage);\n    while (this.page.url() !== USOS_HOME_URL) {\n      await this.wait();\n    }\n  }\n\n  private async automaticLogin() {\n    await this.page.click(\"button.login\");\n    await this.wait();\n    if (this.page.url() !== USOS_HOME_URL) {\n      await this.manualLogin(\n        \"Niepoprawne dane loginowe. Proszę zalogować się manualnie.\",\n      );\n    }\n  }\n\n  private async loginToUsos() {\n    await this.navigate(USOS_LOGIN_URL);\n    const usernameEmpty = this.usosUsername === \"\";\n    const passwordEmpty = this.usosPassword === \"\";\n    await this.page.waitForSelector(\"#username\");\n    if (!usernameEmpty) {\n      await this.page.type(\"#username\", this.usosUsername, { delay: 40 });\n    }\n    if (passwordEmpty) {\n      if (!usernameEmpty) {\n        await this.page.focus(\"#password\");\n      }\n    } else {\n      await this.page.type(\"#password\", this.usosPassword, { delay: 40 });\n    }\n\n    if (usernameEmpty || passwordEmpty) {\n      await this.manualLogin(\"Proszę się zalogować manualnie.\");\n    } else {\n      await this.automaticLogin();\n    }\n  }\n\n  private getAllSurveys(): Promise<SurveyInfo[]> {\n    return this.page.$$eval(\"ul.no-bullets.separated li.flex\", (surveys) =>\n      surveys.map((survey) => {\n        const links = survey.querySelectorAll(\"a\");\n        const name = links[1].textContent?.trim().replace(/\\s+/g, \" \") ?? null;\n        const link = links[2].getAttribute(\"href\");\n        return { name, link };\n      }),\n    );\n  }\n\n  private async navigateToSurveys() {\n    await this.navigate(USOS_SURVEYS_HOMEPAGE);\n  }\n\n  private async fillSurvey(survey?: SurveyInfo) {\n    if (survey == null || survey.link === null) {\n      throw new Error(\"Survey link is null: \" + JSON.stringify(survey));\n    }\n    console.info(\"Filling out survey for\", survey.name);\n    await this.navigate(survey.link);\n\n    //   $('label:contains(\"68-100\")')\n    //   .filter((_, l) => $(l).find('input[type=\"radio\"]').length > 0)[0]\n    //   .click();\n\n    // $(\"label:textEquals('tak')\").each((_, l) => l.click());\n    // $(\"label:textEquals('raczej się zgadzam')\").each((_, l) => l.click());\n    await this.page.$$eval(\"label\", (labels) => {\n      labels.forEach((label) => {\n        const textContent = label.textContent?.trim().replace(/\\s+/g, \" \") ?? null;\n        if (textContent == null) {\n          return;\n        }\n\n        const SECTION_ANSWERS = [\n          \"68-100 %\" /** Question 1.1 */,\n          \"tak\" /** Questions 2.1-2.4 */,\n          \"raczej się zgadzam\" /** Questions 3.1-3.6 */,\n        ];\n\n        if (SECTION_ANSWERS.includes(textContent)) {\n          label.click();\n        }\n      });\n    });\n    const submitButton = await this.page.$(\"input.positive[type=button]\");\n    if (submitButton == null) {\n      throw new Error(\"Survey submit button not found\");\n    }\n    await submitButton.click();\n    await this.wait();\n    this.surveysFilled++;\n  }\n\n  async start() {\n    await this.init();\n    await this.loginToUsos();\n\n    this.surveys = await this.getAllSurveys();\n    while (this.surveys.length > 0) {\n      await this.navigateToSurveys();\n      const survey = this.surveys.pop();\n      if (survey == null) {\n        console.warn(\"Nullish survey, skipping...\");\n        continue;\n      }\n      await this.fillSurvey(survey);\n    }\n\n    await this.showAlert(\n      \"Wszystkie ankiety zostały wypełnione.\\nDziękuję za korzystanie z aplikacji!\\n\\n~ kguzek\",\n    );\n    await this.browser.close();\n  }\n}\n"],"mappings":"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","names":["password","message"]}