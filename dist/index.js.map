{"version":3,"sources":["../node_modules/tsup/assets/esm_shims.js","../src/survey-filler.ts","../src/index.ts"],"sourcesContent":["// Shim globals in esm bundle\nimport { fileURLToPath } from 'url'\nimport path from 'path'\n\nconst getFilename = () => fileURLToPath(import.meta.url)\nconst getDirname = () => path.dirname(getFilename())\n\nexport const __dirname = /* @__PURE__ */ getDirname()\nexport const __filename = /* @__PURE__ */ getFilename()\n","/* SPDX-License-Identifier: AGPL-3.0-only */\n/*            USOS Survey Filler          */\n/*       Copyright © 2025 Konrad Guzek    */\n\nimport type { Browser, Page } from \"puppeteer\";\nimport puppeteer from \"puppeteer\";\n\nconst USOS_USERNAME = process.env.USOS_USERNAME || \"\";\nconst USOS_PASSWORD = process.env.USOS_PASSWORD || \"\";\n\nconst USOS_HOME_URL = \"https://web.usos.pwr.edu.pl/kontroler.php?_action=home/index\";\nconst USOS_LOGIN_URL =\n  \"https://login.pwr.edu.pl/auth/realms/pwr.edu.pl/protocol/cas/login?service=https%3A%2F%2Fweb.usos.pwr.edu.pl%2Fkontroler.php%3F_action%3Dlogowaniecas%2Findex\";\nconst USOS_SURVEYS_HOMEPAGE =\n  \"https://web.usos.pwr.edu.pl/kontroler.php?_action=dla_stud/studia/ankiety/index\";\n\nexport class SurveyFiller {\n  private page!: Page;\n  private browser!: Browser;\n  private surveys: SurveyInfo[] = [];\n\n  private async init() {\n    this.browser = await puppeteer.launch({\n      headless: false,\n      args: [\"--window-size=1600,900\", \"--window-position=100,100\"],\n    });\n\n    const pages = await this.browser.pages();\n    await pages[0].close();\n    this.page = await this.browser.newPage();\n    this.page.setViewport({ width: 1600, height: 900 });\n  }\n\n  private async wait() {\n    await this.page.waitForNavigation({ waitUntil: \"networkidle0\" });\n  }\n\n  private async navigate(url: string) {\n    // console.debug(\" -->\", url);\n    await this.page.goto(url, { waitUntil: \"networkidle0\" });\n  }\n\n  private showAlert(message: string) {\n    return this.page.evaluate(\n      (message) => alert(`[USOS Survey Filler] ${message}`),\n      message,\n    );\n  }\n\n  private async manualLogin(alertMessage: string) {\n    await this.showAlert(alertMessage);\n    while (this.page.url() !== USOS_HOME_URL) {\n      await this.wait();\n    }\n  }\n\n  private async automaticLogin() {\n    await this.page.click(\"button.login\");\n    await this.wait();\n    if (this.page.url() !== USOS_HOME_URL) {\n      await this.manualLogin(\n        \"Niepoprawne dane loginowe. Proszę zalogować się manualnie.\",\n      );\n    }\n  }\n\n  private async loginToUsos() {\n    await this.navigate(USOS_LOGIN_URL);\n    const usernameEmpty = USOS_USERNAME === \"\";\n    const passwordEmpty = USOS_PASSWORD === \"\";\n    await this.page.waitForSelector(\"#username\");\n    if (!usernameEmpty) {\n      await this.page.type(\"#username\", USOS_USERNAME, { delay: 100 });\n    }\n    if (passwordEmpty) {\n      if (!usernameEmpty) {\n        await this.page.focus(\"#password\");\n      }\n    } else {\n      await this.page.type(\"#password\", USOS_PASSWORD, { delay: 100 });\n    }\n\n    if (usernameEmpty || passwordEmpty) {\n      await this.manualLogin(\"Proszę się zalogować manualnie.\");\n    } else {\n      await this.automaticLogin();\n    }\n  }\n\n  private getAllSurveys(): Promise<SurveyInfo[]> {\n    return this.page.$$eval(\"ul.no-bullets.separated li.flex\", (surveys) =>\n      surveys.map((survey) => {\n        const links = survey.querySelectorAll(\"a\");\n        const name = links[1].textContent?.trim().replace(/\\s+/g, \" \") ?? null;\n        const link = links[2].getAttribute(\"href\");\n        return { name, link };\n      }),\n    );\n  }\n\n  private async navigateToSurveys() {\n    await this.navigate(USOS_SURVEYS_HOMEPAGE);\n  }\n\n  private async fillSurvey(survey?: SurveyInfo) {\n    if (survey == null || survey.link === null) {\n      throw new Error(\"Survey link is null: \" + JSON.stringify(survey));\n    }\n    console.info(\"Filling out survey for\", survey.name);\n    await this.navigate(survey.link);\n\n    //   $('label:contains(\"68-100\")')\n    //   .filter((_, l) => $(l).find('input[type=\"radio\"]').length > 0)[0]\n    //   .click();\n\n    // $(\"label:textEquals('tak')\").each((_, l) => l.click());\n    // $(\"label:textEquals('raczej się zgadzam')\").each((_, l) => l.click());\n    await this.page.$$eval(\"label\", (labels) => {\n      labels.forEach((label) => {\n        const textContent = label.textContent?.trim().replace(/\\s+/g, \" \") ?? null;\n        if (textContent == null) {\n          return;\n        }\n\n        const SECTION_ANSWERS = [\n          \"68-100 %\" /** Question 1.1 */,\n          \"tak\" /** Questions 2.1-2.4 */,\n          \"raczej się zgadzam\" /** Questions 3.1-3.6 */,\n        ];\n\n        if (SECTION_ANSWERS.includes(textContent)) {\n          label.click();\n        }\n      });\n    });\n    const submitButton = await this.page.$(\"input.positive[type=button]\");\n    if (submitButton == null) {\n      throw new Error(\"Survey submit button not found\");\n    }\n    await submitButton.click();\n    await this.wait();\n  }\n\n  async start() {\n    await this.init();\n    await this.loginToUsos();\n\n    this.surveys = await this.getAllSurveys();\n    while (this.surveys.length > 0) {\n      await this.navigateToSurveys();\n      const survey = this.surveys.pop();\n      if (survey == null) {\n        console.warn(\"Nullish survey, skipping...\");\n        continue;\n      }\n      await this.fillSurvey(survey);\n    }\n\n    await this.showAlert(\n      \"Wszystkie ankiety zostały wypełnione.\\nDziękuję za korzystanie z aplikacji!\\n\\n~ kguzek\",\n    );\n    await this.browser.close();\n  }\n}\n","/* SPDX-License-Identifier: AGPL-3.0-only */\n/*            USOS Survey Filler          */\n/*       Copyright © 2025 Konrad Guzek    */\n\nimport { config } from \"dotenv\";\n\nconfig();\n\nasync function main() {\n  // In order to ensure environment variables are loaded before the module is imported\n  const surveyFillerModule = await import(\"./survey-filler\");\n  const surveyFiller = new surveyFillerModule.SurveyFiller();\n  surveyFiller.start();\n}\n\nmain();\n"],"mappings":"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","names":["message"]}